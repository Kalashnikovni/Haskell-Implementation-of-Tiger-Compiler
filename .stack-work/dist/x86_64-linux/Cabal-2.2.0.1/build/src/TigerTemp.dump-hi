
==================== FINAL INTERFACE ====================
2019-06-15 23:18:31.689128971 UTC

interface HaskTiger-0.1.0.0-E2V2C9MNTGC8IfNMs3zKtJ:TigerTemp 8043
  interface hash: 1f973b0ae292288ae684c118301d72e2
  ABI hash: de3b8ff373a73b9b291ae6f59a678eef
  export-list hash: 2391c2332908a7f3d5d168a67d1d057d
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 78ee77044def946ef4a3f1b39c5af7fd
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  TigerTemp.detgenLabel
  TigerTemp.detgenTemp
  TigerTemp.makeStringL
  TigerTemp.makeStringT
  TigerTemp.Label
  TigerTemp.TLGenerator{TigerTemp.newLabel TigerTemp.newTemp}
  TigerTemp.Temp
module dependencies: State TigerSymbol TigerUnique
package dependencies: array-0.5.2.0 base-4.11.1.0* binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      ghc-prim-0.5.2.0 integer-gmp-1.0.2.0 mtl-2.2.2 text-1.2.3.0
                      transformers-0.5.5.0
orphans: text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         HaskTiger-0.1.0.0-E2V2C9MNTGC8IfNMs3zKtJ:TigerUnique
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         text-1.2.3.0:Data.Text
import  -/  TigerSymbol 4628943ae21548f9838cca1c81589f49
  exports: 3aa8690c7d65c85b2775cbd880ffcd19
  Symbol 80a54d65275119c925e5daf83dc9ca3b
import  -/  TigerUnique 2c7b8a003ba6cddf20e41223ec1f0139
  exports: fb658a085da3f6734ecff0198e21e4ae
  UniqueGenerator 3fc04058dd27777fe7f093048cb50c50
  mkUnique 56353a6ff3b28b3dd64e9ac226ace72c
import  -/  base-4.11.1.0:Data.Functor f522c3501272159820fd6f242510732f
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type f3d5169c3d3830854b19f6565b265403
import  -/  mtl-2.2.2:Control.Monad.State 1f28325cb5ef11b6b40ffadfe4bc2ca3
import  -/  text-1.2.3.0:Data.Text 4f359e32d6f1c9011b171e00ff8fb023
import  -/  text-1.2.3.0:Data.Text.Show 3b4b6fb2985a731022d67f636682da2b
import  -/  transformers-0.5.5.0:Control.Monad.Trans.Class 352c7bdb1604d64f8f438c96bf57066a
06fb3118757bb0edd6823bcd9f2c4373
  $fTLGeneratorp ::
    (GHC.Base.Monad p, TigerUnique.UniqueGenerator p) =>
    TigerTemp.TLGenerator p
  DFunId
  {- Arity: 2,
     Strictness: <L,U(U(U(C(C1(U)),A),A,A,A,A,A),A,A,A,A)><L,U>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ p :: * -> *
                      (v :: GHC.Base.Monad p)
                      (v1 :: TigerUnique.UniqueGenerator p).
                  @ p
                  (TigerTemp.$fTLGeneratorp_$cnewTemp @ p v v1)
                  (TigerTemp.$fTLGeneratorp_$cnewLabel @ p v v1) -}
82e96d735e4de744c3f93844c22e7b36
  $fTLGeneratorp_$cnewLabel ::
    (GHC.Base.Monad p, TigerUnique.UniqueGenerator p) =>
    p TigerTemp.Label
  {- Arity: 2,
     Strictness: <S(S(S(C(C(S))L)LLLLL)LLLL),1*U(1*U(1*U(1*C1(C1(U)),A),A,A,A,A,A),A,A,A,A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ p :: * -> *
                   ($dMonad :: GHC.Base.Monad p)
                   ($dUniqueGenerator :: TigerUnique.UniqueGenerator p) ->
                 GHC.Base.fmap
                   @ p
                   (GHC.Base.$p1Applicative @ p (GHC.Base.$p1Monad @ p $dMonad))
                   @ GHC.Integer.Type.Integer
                   @ TigerTemp.Label
                   TigerTemp.detgenLabel
                   $dUniqueGenerator
                     `cast`
                   (TigerUnique.N:UniqueGenerator[0] <p>_N)) -}
c0753111b4cfbc170e70fc6c471328d4
  $fTLGeneratorp_$cnewTemp ::
    (GHC.Base.Monad p, TigerUnique.UniqueGenerator p) =>
    p TigerTemp.Temp
  {- Arity: 2,
     Strictness: <S(S(S(C(C(S))L)LLLLL)LLLL),1*U(1*U(1*U(1*C1(C1(U)),A),A,A,A,A,A),A,A,A,A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ p :: * -> *
                   ($dMonad :: GHC.Base.Monad p)
                   ($dUniqueGenerator :: TigerUnique.UniqueGenerator p) ->
                 GHC.Base.fmap
                   @ p
                   (GHC.Base.$p1Applicative @ p (GHC.Base.$p1Monad @ p $dMonad))
                   @ GHC.Integer.Type.Integer
                   @ TigerTemp.Temp
                   TigerTemp.detgenTemp
                   $dUniqueGenerator
                     `cast`
                   (TigerUnique.N:UniqueGenerator[0] <p>_N)) -}
06fb3118757bb0edd6823bcd9f2c4373
  $fTLGeneratort ::
    (Control.Monad.Trans.Class.MonadTrans t, TigerTemp.TLGenerator m,
     GHC.Base.Monad m) =>
    TigerTemp.TLGenerator (t m)
  DFunId
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,C(C1(U))><L,U(1*U,1*U)><L,U>m, Inline: CONLIKE,
     Unfolding: DFun: @ t :: (* -> *) -> * -> *
                      @ m :: * -> *
                      (v :: Control.Monad.Trans.Class.MonadTrans t)
                      (v1 :: TigerTemp.TLGenerator m)
                      (v2 :: GHC.Base.Monad m).
                  @ (t m)
                  (TigerTemp.$fTLGeneratort_$cnewTemp @ t @ m v v1 v2)
                  (TigerTemp.$fTLGeneratort_$cnewLabel @ t @ m v v1 v2) -}
06fb3118757bb0edd6823bcd9f2c4373
  $fTLGeneratort_$cnewLabel ::
    (Control.Monad.Trans.Class.MonadTrans t, TigerTemp.TLGenerator m,
     GHC.Base.Monad m) =>
    t m TigerTemp.Label
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*U(A,1*U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ t :: (* -> *) -> * -> *
                   @ m :: * -> *
                   ($dMonadTrans :: Control.Monad.Trans.Class.MonadTrans t)
                   ($dTLGenerator :: TigerTemp.TLGenerator m)
                   ($dMonad :: GHC.Base.Monad m) ->
                 $dMonadTrans
                   `cast`
                 (Control.Monad.Trans.Class.N:MonadTrans[0] <t>_N)
                   @ m
                   @ TigerTemp.Label
                   $dMonad
                   (TigerTemp.newLabel @ m $dTLGenerator)) -}
06fb3118757bb0edd6823bcd9f2c4373
  $fTLGeneratort_$cnewTemp ::
    (Control.Monad.Trans.Class.MonadTrans t, TigerTemp.TLGenerator m,
     GHC.Base.Monad m) =>
    t m TigerTemp.Temp
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(C(S)),1*C1(C1(U))><L,1*U(1*U,A)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ t :: (* -> *) -> * -> *
                   @ m :: * -> *
                   ($dMonadTrans :: Control.Monad.Trans.Class.MonadTrans t)
                   ($dTLGenerator :: TigerTemp.TLGenerator m)
                   ($dMonad :: GHC.Base.Monad m) ->
                 $dMonadTrans
                   `cast`
                 (Control.Monad.Trans.Class.N:MonadTrans[0] <t>_N)
                   @ m
                   @ TigerTemp.Temp
                   $dMonad
                   (TigerTemp.newTemp @ m $dTLGenerator)) -}
2ef1a70245b190b7e02d799bdb25c8e9
  $tc'C:TLGenerator :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8994967851129219099##
                   5834320689968131527##
                   TigerTemp.$trModule
                   TigerTemp.$tc'C:TLGenerator2
                   1#
                   TigerTemp.$tc'C:TLGenerator1) -}
9c1ea156bae24e0d360df7925d7050a7
  $tc'C:TLGenerator1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
811c381150a26e9396a4f7ae937af276
  $tc'C:TLGenerator2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TigerTemp.$tc'C:TLGenerator3) -}
f27701d17280e95c4e2bfed31ef5d85c
  $tc'C:TLGenerator3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'C:TLGenerator"#) -}
7494778f02541ceee872ffe34361c8c2
  $tcTLGenerator :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12819351796006268507##
                   7943402937203252130##
                   TigerTemp.$trModule
                   TigerTemp.$tcTLGenerator2
                   0#
                   TigerTemp.$tcTLGenerator1) -}
762c6fe4abfc8c23e7a804ee36974cf8
  $tcTLGenerator1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
c7f6933c4f489581b6c2ede6a419643f
  $tcTLGenerator2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TigerTemp.$tcTLGenerator3) -}
bf28468745837beb6f26849969d4976e
  $tcTLGenerator3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TLGenerator"#) -}
17f3f7dc416bd12c163b30e62fee96f6
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TigerTemp.$trModule3
                   TigerTemp.$trModule1) -}
2020abbed2818b353bcaa4d0c899a9bb
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TigerTemp.$trModule2) -}
01c145ba56f594406210f205aa6bccf1
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TigerTemp"#) -}
dc078e8c424ae421940a9481220a729f
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS TigerTemp.$trModule4) -}
c073024e9b9ab44a19cf953c7ef04493
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("HaskTiger-0.1.0.0-E2V2C9MNTGC8IfNMs3zKtJ"#) -}
6635d824cf4888ad2dc0e0a35310cdc4
  $wouter ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><S,U><S,1*U><S,U><S,U>,
     Inline: [0] -}
810eccfebde2d22bfef77a99189c28f8
  type Label = TigerSymbol.Symbol
06fb3118757bb0edd6823bcd9f2c4373
  class TLGenerator (w :: * -> *) where
    newTemp :: w TigerTemp.Temp
    newLabel :: w TigerTemp.Label
    {-# MINIMAL newTemp, newLabel #-}
f852c724a423eccf145b757fe1ec3232
  type Temp = TigerSymbol.Symbol
19c14dadf6ba83c9929b33dc703249bb
  detgenLabel :: GHC.Integer.Type.Integer -> TigerTemp.Label
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (i :: GHC.Integer.Type.Integer) ->
                 case GHC.CString.unpackAppendCString#
                        TigerTemp.detgenLabel1
                        (case GHC.Show.$w$cshowsPrec4
                                0#
                                i
                                (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                         GHC.Types.: @ GHC.Types.Char ww3 ww4 }) of dt { DEFAULT ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                10#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         TigerTemp.$wouter ipv1 4# dt 0# ipv }) of ds1 { (#,#) ipv ipv1 ->
                 ipv1 } }) -}
8b31a640d13d5fd027a79f5539ff1351
  detgenLabel1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("L"#) -}
f2827e1fbdb0266c89c6175a8ecf69c1
  detgenTemp :: GHC.Integer.Type.Integer -> TigerTemp.Temp
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (i :: GHC.Integer.Type.Integer) ->
                 case GHC.CString.unpackAppendCString#
                        TigerTemp.detgenTemp1
                        (case GHC.Show.$w$cshowsPrec4
                                0#
                                i
                                (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                         GHC.Types.: @ GHC.Types.Char ww3 ww4 }) of dt { DEFAULT ->
                 case GHC.Magic.runRW#
                        @ ('GHC.Types.TupleRep
                             '['GHC.Types.TupleRep '[], 'GHC.Types.LiftedRep])
                        @ (# GHC.Prim.State# GHC.Prim.RealWorld, Data.Text.Internal.Text #)
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                10#
                                s1 of ds1 { (#,#) ipv ipv1 ->
                         TigerTemp.$wouter ipv1 4# dt 0# ipv }) of ds1 { (#,#) ipv ipv1 ->
                 ipv1 } }) -}
a83546aa1c366ee3737bfe93a99af28f
  detgenTemp1 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("T"#) -}
21c1be8e7c244c3f8c853e6603bbde37
  makeStringL :: TigerTemp.Label -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSS),1*U(U,U,U)>,
     Unfolding: InlineRule (0, True, True) Data.Text.Show.unpack -}
68e80057eb4c3b9dd6306512d56c3ec9
  makeStringT :: TigerTemp.Temp -> GHC.Base.String
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSS),1*U(U,U,U)>,
     Unfolding: InlineRule (0, True, True) Data.Text.Show.unpack -}
instance [safe] TigerTemp.TLGenerator [.]
  = TigerTemp.$fTLGeneratorp
instance [safe] TigerTemp.TLGenerator [.]
  = TigerTemp.$fTLGeneratort
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

